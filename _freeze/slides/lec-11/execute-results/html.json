{
  "hash": "5a04659d7001b06a66f00071bc2db2f8",
  "result": {
    "markdown": "---\ntitle: \"Inference for regression\"\nsubtitle: \"STA 101L - Summer I 2022\"\nauthor: \"Raphael Morsomme\"\nfooter:  \"[https://rmorsomme.github.io/website/](https://rmorsomme.github.io/website/)\"\nlogo: \"images/logo.jpg\"\nformat: \n  revealjs: \n    theme: slides.scss\n    transition: fade\n    slide-number: true\n    code-fold: false\n    code-summary: \"Show the code\"\n    scrollable: true\n    link-external-newwindow: true\n    history: false\neditor: visual\nexecute:\n  freeze: auto\n  echo: true\neditor_options: \n  chunk_output_type: console\n---\n\n\n\n# Welcome\n\n## Announcements\n\n-   \n\n## Recap\n\n-   The normal distribution\n\n-   One mean\n\n    -   CI via bootstrap\n\n-   Two means\n\n    -   HT via simulation\n\n    -   CI via bootstrap\n\n-   Paired means\n\n    -   HT via simulation\n\n    -   CI via bootstrap\n\n## Outline\n\n-   Simple linear regression\n    -   HT via simulation\n\n    -   CI via bootstrap\n\n# Simple linear regression\n\n## Setup\n\n**Simple linear regression** (slr)\n\n$$\nY \\approx \\beta_0 + \\beta_1 X\n$$\n\n**Multiple linear regression** (mlr)\n\n$$\nY \\approx \\beta_0 + \\beta_1 X_1 + \\beta_2 X_2 + \\dots + \\beta_p X_p\n$$\n\n**Logistic regression**\n\n$$\np_i = \\dfrac{\\exp\\{\\mu\\}}{1+\\exp\\{\\mu\\}}, \\qquad \\mu \\approx \\beta_0 + \\beta_1 X_1 + \\beta_2 X_2 + \\dots + \\beta_p X_p\n$$\n\n## HT and CI for regression\n\n**Population parameter**: slope parameter $\\beta_k$\n\n**Sample statistics**: least-square estimate $\\hat{\\beta}_k$\n\n. . .\n\n**Confidence interval**: range of plausible values for a parameter $\\beta_k$\n\n**Hypothesis test**: is the response variable $Y$ independent of the predictor $X_k$?\n\n-   $H_0:\\beta_k = 0$ ($Y$ does not depend on $X_k$)\n\n-   $H_a:\\beta_k\\neq0$\n\n## \n\n::: {.callout-tip icon=\"false\"}\n## Individual exercise - \n\nExercise [23.1](https://openintro-ims.netlify.app/inference-one-mean.html#chp19-exercises)\n:::\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n```{=html}\n<div class=\"countdown\" id=\"timer_629e3897\" style=\"right:0;bottom:0;\" data-warnwhen=\"0\">\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">02</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n:::\n:::\n\n## Example -- birth weight\n\n::: columns\n::: {.column width=\"50%\"}\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nset.seed(47)\nd <- openintro::births14 %>% sample_n(100) %>% select(weight, mage)\nglimpse(d)\n```\n\n::: {.cell-output-stdout}\n```\nRows: 100\nColumns: 2\n$ weight <dbl> 6.94, 9.19, 7.39, 8.82, 7.87, 9.39, 8.00, 7.25, 7.19, 5.64, 6.7~\n$ mage   <dbl> 27, 29, 26, 28, 35, 29, 23, 22, 34, 21, 31, 26, 29, 35, 28, 30,~\n```\n:::\n:::\n:::\n\n::: {.column width=\"45%\"}\n![](images/lec-11/newborn.jpg){fig-align=\"center\"}\n:::\n:::\n\n## Original data\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(d, aes(x = mage, y = weight)) +\n  geom_point() +\n  geom_smooth(method = \"lm\", se = FALSE, col = \"maroon\")\n```\n\n::: {.cell-output-display}\n![](lec-11_files/figure-revealjs/unnamed-chunk-3-1.png){fig-align='center' width=80%}\n:::\n:::\n\n# Hypothesis test via simulation\n\n## Hypotheses and simulations\n\n$H_0:\\beta_1=0$\n\n$H_a:\\beta_1\\neq 0$\n\n. . .\n\n-   Simulate many samples under $H_0$ (the response is independent of the predictor)\n\n-   Determine if the observed data could have plausibly arisen under $H_0$\n\n## Simulating under $H_0$\n\nUnder $H_0$, there is no relation between the response and the predictor\n\n$\\Rightarrow$ the newborn's weight is independent of the mother's age\n\n$\\Rightarrow$ randomly re-assign the predictor independently of the response.\n\n## \n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nd_sim <- d %>% mutate(mage = sample(mage)) # shuffle the scores\nhead(d)\n```\n\n::: {.cell-output-stdout}\n```\n# A tibble: 6 x 2\n  weight  mage\n   <dbl> <dbl>\n1   6.94    27\n2   9.19    29\n3   7.39    26\n4   8.82    28\n5   7.87    35\n6   9.39    29\n```\n:::\n\n```{.r .cell-code}\nhead(d_sim)\n```\n\n::: {.cell-output-stdout}\n```\n# A tibble: 6 x 2\n  weight  mage\n   <dbl> <dbl>\n1   6.94    32\n2   9.19    34\n3   7.39    27\n4   8.82    29\n5   7.87    23\n6   9.39    34\n```\n:::\n:::\n\n## Function for computing the test statistic\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"|2|3|4|\"}\ncompute_beta_LS <- function(data){\n  m <- lm(weight ~ mage, data = data)\n  coef <- m$coefficients\n  slope <- coef[[\"mage\"]] \n  return(slope)\n}\ncompute_beta_LS(d_sim)\n```\n\n::: {.cell-output-stdout}\n```\n[1] 0.03138472\n```\n:::\n:::\n\n## For-loop for simulating under $H_0$\n\n::: {.cell layout-align=\"center\" hash='lec-11_cache/revealjs/unnamed-chunk-6_6bd255423644d805005c37c249eb8233'}\n\n```{.r .cell-code}\nresults   <- tibble(stat_sim = numeric())\nset.seed(0)\nfor(i in 1 : 20e3){\n  d_sim    <- d %>% mutate(mage = sample(mage)) # simulate under H0\n  stat_sim <- compute_beta_LS(d_sim) # test statistic\n  results  <- results %>% add_row(stat_sim)\n}\n```\n:::\n\n## Sampling distribution\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nstat_obs <- compute_beta_LS(d)\nstat_obs\n```\n\n::: {.cell-output-stdout}\n```\n[1] 0.05542352\n```\n:::\n\n```{.r .cell-code}\nggplot(results) + \n  geom_histogram(aes(stat_sim)) +\n  geom_vline(xintercept = stat_obs, col = \"maroon\", size = 2)\n```\n\n::: {.cell-output-display}\n![](lec-11_files/figure-revealjs/unnamed-chunk-7-1.png){fig-align='center' width=80%}\n:::\n:::\n\n## p-value\n\n-   the probability that $\\hat{\\beta}_{1}^{sim}\\ge$ 0.055 or $\\hat{\\beta}_{1}^{sim}\\le$ -0.055.\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nresults %>%\n  mutate(is_more_extreme = stat_sim >= stat_obs | stat_sim <= -stat_obs) %>%\n  summarize(p_value = mean(is_more_extreme))\n```\n\n::: {.cell-output-stdout}\n```\n# A tibble: 1 x 1\n  p_value\n    <dbl>\n1  0.0208\n```\n:::\n:::\n\nUsing the usual significance level $\\alpha = 0.05$, we **reject** $H_0$.\n\n. . .\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nm <- lm(weight~mage, data = d)\nbroom::tidy(m)\n```\n\n::: {.cell-output-stdout}\n```\n# A tibble: 2 x 5\n  term        estimate std.error statistic  p.value\n  <chr>          <dbl>     <dbl>     <dbl>    <dbl>\n1 (Intercept)   5.59      0.669       8.36 4.35e-13\n2 mage          0.0554    0.0237      2.34 2.13e- 2\n```\n:::\n:::\n\n## \n\n::: {.callout-tip icon=\"false\"}\n## Group exercise - HT\n\nExercises [20.3](https://openintro-ims.netlify.app/inference-two-means.html#chp20-exercises) and [20.7](https://openintro-ims.netlify.app/inference-two-means.html#chp20-exercises)\n:::\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n```{=html}\n<div class=\"countdown\" id=\"timer_629e3cfd\" style=\"right:0;bottom:0;\" data-warnwhen=\"0\">\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">04</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n:::\n:::\n\n# Confidence interval via bootstrap\n\n## Bootstrapping\n\nSample with repetition from the observed sample to construct many **bootstrap samples**.\n\nBootstrap samples $\\Rightarrow$ sampling distribution $\\Rightarrow$ CI\n\n## Bootstrap in `R`\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nsample_bootstrap <- function(data){ # same function as before\n  n                <- nrow(data)\n  sample_bootstrap <- slice_sample(data, n = n, replace = TRUE)\n  return(sample_bootstrap)\n}\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nset.seed(0)\nsample_bootstrap(d)\n```\n\n::: {.cell-output-stdout}\n```\n# A tibble: 100 x 2\n   weight  mage\n    <dbl> <dbl>\n 1   7.44    35\n 2   6.83    30\n 3   5.3     29\n 4   6.94    27\n 5   5.07    23\n 6   6.03    24\n 7   6.44    26\n 8   7.44    35\n 9   7.13    33\n10   7.25    23\n# ... with 90 more rows\n```\n:::\n:::\n\n## \n\n::: {.cell layout-align=\"center\" hash='lec-11_cache/revealjs/unnamed-chunk-13_fee28652e074f0ef9ecc78396d66fb47'}\n\n```{.r .cell-code}\nresults <- tibble(stat_boot = numeric())\nset.seed(0)\nfor(i in 1 : 1e3){\n  d_boot    <- sample_bootstrap(d) # bootstrap sample\n  stat_boot <- compute_beta_LS(d_boot) # bootstrap statistic\n  results   <- results %>% add_row(stat_boot) \n}\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nquantile(results$stat_boot, c(0.05 , 0.95 )) # 90% CI\n```\n\n::: {.cell-output-stdout}\n```\n        5%        95% \n0.01805457 0.09266791 \n```\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nquantile(results$stat_boot, c(0.01, 0.99)) # 98% CI (includes 0)\n```\n\n::: {.cell-output-stdout}\n```\n           1%           99% \n-0.0005464837  0.1117886741 \n```\n:::\n:::\n\n## \n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(results) + \n  geom_histogram(aes(stat_boot)) + \n  geom_vline(xintercept = quantile(results$stat_boot, c(0.05, 0.95)), col = \"gold1\", size = 2) + # 90% CI \n  geom_vline(xintercept = quantile(results$stat_boot, c(0.01, 0.99)), col = \"maroon\", size = 2) # 95% CI\n```\n\n::: {.cell-output-display}\n![](lec-11_files/figure-revealjs/unnamed-chunk-16-1.png){fig-align='center' width=80%}\n:::\n:::\n\n## \n\n::: {.callout-tip icon=\"false\"}\n## Group exercise - Bootstrap CI\n\nExercises\n:::\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n```{=html}\n<div class=\"countdown\" id=\"timer_629e3cc8\" style=\"right:0;bottom:0;\" data-warnwhen=\"0\">\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">03</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n:::\n:::\n\n## CI and HT\n\n::: callout-note\n## Two sides of the same coin\n\nThe 95% CI dos not include 0, but the 99% CI does. This indicates that 0 is a plausible at the 5% significance level but not the 1% significance level. This is exactly what the HT concluded.\n:::\n\n## \n\n::: {.callout-tip icon=\"false\"}\n## Group exercises - CI\n\nExercise\n:::\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n```{=html}\n<div class=\"countdown\" id=\"timer_629e3baa\" style=\"right:0;bottom:0;\" data-warnwhen=\"0\">\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">03</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n:::\n:::\n\n# Recap\n\n## Recap\n\n-   Simple linear regression\n    -   HT via simulation\n\n    -   CI via bootstrap",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"..\\site_libs/countdown-0.3.5/countdown.css\" rel=\"stylesheet\" />\r\n<script src=\"..\\site_libs/countdown-0.3.5/countdown.js\"></script>\r\n"
      ],
      "include-after-body": [
        "\r\n<script>\r\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\r\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\r\n  // slide changes (different for each slide format).\r\n  (function () {\r\n    function fireSlideChanged(previousSlide, currentSlide) {\r\n\r\n      // dispatch for htmlwidgets\r\n      const event = window.document.createEvent(\"Event\");\r\n      event.initEvent(\"slideenter\", true, true);\r\n      window.document.dispatchEvent(event);\r\n\r\n      // dispatch for shiny\r\n      if (window.jQuery) {\r\n        if (previousSlide) {\r\n          window.jQuery(previousSlide).trigger(\"hidden\");\r\n        }\r\n        if (currentSlide) {\r\n          window.jQuery(currentSlide).trigger(\"shown\");\r\n        }\r\n      }\r\n    }\r\n\r\n    // hookup for reveal\r\n    if (window.Reveal) {\r\n      window.Reveal.addEventListener(\"slidechanged\", function(event) {\r\n        fireSlideChanged(event.previousSlide, event.currentSlide);\r\n      });\r\n    }\r\n\r\n    // hookup for slidy\r\n    if (window.w3c_slidy) {\r\n      window.w3c_slidy.add_observer(function (slide_num) {\r\n        // slide_num starts at position 1\r\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\r\n      });\r\n    }\r\n\r\n  })();\r\n</script>\r\n\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": null
  }
}